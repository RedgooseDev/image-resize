{"version":3,"file":"ResizeImage.js","sources":["../src/parts/Canvas.js","../src/parts/events.js","../src/parts/defaultOptions.js","../src/parts/resizeImage.js","../src/parts/output.js","../src/ResizeImage.js"],"sourcesContent":["/**\n * Canvas\n *\n * @param {Number} width\n * @param {Number} height\n * @param {String} bgColor\n */\nexport default function Canvas(width=320, height=240, bgColor='#ffffff') {\n\n\tthis.el = document.createElement('canvas');\n\tthis.ctx = this.el.getContext('2d');\n\n\tthis.el.width = width;\n\tthis.el.height = height;\n\n\tthis.ctx.fillStyle = bgColor;\n\tthis.ctx.fillRect(0, 0, width, height);\n\n}\n","/**\n * load image\n *\n * @param {String} src\n * @return {Promise}\n */\nexport function loadImage(src)\n{\n\treturn new Promise((resolve, reject) => {\n\t\tif (src)\n\t\t{\n\t\t\tlet image = new Image();\n\n\t\t\timage.onload = function(e)\n\t\t\t{\n\t\t\t\tresolve(image);\n\t\t\t};\n\t\t\timage.onerror = function(e)\n\t\t\t{\n\t\t\t\treject(e);\n\t\t\t};\n\n\t\t\timage.setAttribute('crossOrigin', 'anonymous');\n\t\t\timage.src = src;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treject(new Error('no src'));\n\t\t}\n\t});\n}","export const base = {\n\n\tquality: .75,\n\tformat: 'jpg', // png,jpg\n\toutputType: 'base64', // base64, canvas, blob\n\twidth: 320,\n\theight: null,\n\treSample: 2,\n\tbgColor: '#ffffff',\n\n\t// callbacks\n\tcallback_ready: function () { console.log('READY PLAY'); },\n\n};\n","import Canvas from '../parts/Canvas';\n\n\n// default options\nconst defaultOptions = {\n\tcanvas: null,\n\treSample: 2,\n\twidth: 320,\n\theight: 240,\n\tcx: 0,\n\tcy: 0,\n\tcw: 0,\n\tch: 0,\n\tdx: 0,\n\tdy: 0,\n\tdw: 0,\n\tdh: 0,\n\tbgColor: '#ffffff',\n};\n\n\n/**\n * Resize canvas\n *\n * @param {Object} options\n * @param {Number} count\n * @param {Canvas} parentCanvas\n * @return {Promise}\n */\nfunction resize(options, count, parentCanvas)\n{\n\treturn new Promise(resolve => {\n\t\tfunction func(count, parentCanvas)\n\t\t{\n\t\t\tconst pow = Math.pow(2, count);\n\t\t\tlet canvasForResize = new Canvas(\n\t\t\t\toptions.width * pow,\n\t\t\t\toptions.height * pow,\n\t\t\t\toptions.bgColor\n\t\t\t);\n\n\t\t\tcanvasForResize.ctx.drawImage(\n\t\t\t\tparentCanvas.el,\n\t\t\t\t0,\n\t\t\t\t0,\n\t\t\t\tparentCanvas.el.width * 0.5,\n\t\t\t\tparentCanvas.el.height * 0.5,\n\t\t\t);\n\n\t\t\tif (count > 0)\n\t\t\t{\n\t\t\t\tfunc(count - 1, canvasForResize);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresolve(canvasForResize);\n\t\t\t}\n\t\t}\n\n\t\tfunc(count - 1, parentCanvas);\n\t});\n}\n\n\n/**\n * Resize image\n *\n * @param {Object} options\n * @return {Promise}\n */\nexport default function resizeImage(options)\n{\n\t// assign options\n\toptions = Object.assign({}, defaultOptions, options);\n\n\t// set resampling count\n\toptions.reSample = Math.min(4, options.reSample);\n\toptions.reSample = Math.max(0, options.reSample);\n\tconst reSamplingCount = Math.pow(2, options.reSample);\n\n\treturn new Promise(function(resolve, reject) {\n\t\ttry\n\t\t{\n\t\t\tconst canvas = new Canvas(\n\t\t\t\toptions.width * reSamplingCount,\n\t\t\t\toptions.height * reSamplingCount,\n\t\t\t\toptions.bgColor\n\t\t\t);\n\n\t\t\tcanvas.ctx.drawImage(\n\t\t\t\toptions.canvas.el,\n\t\t\t\toptions.cx,\n\t\t\t\toptions.cy,\n\t\t\t\toptions.cw,\n\t\t\t\toptions.ch,\n\t\t\t\toptions.dx * reSamplingCount,\n\t\t\t\toptions.dy * reSamplingCount,\n\t\t\t\toptions.dw * reSamplingCount,\n\t\t\t\toptions.dh * reSamplingCount\n\t\t\t);\n\n\t\t\tif (options.reSample > 0)\n\t\t\t{\n\t\t\t\tresize(options, options.reSample, canvas).then(resolve);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresolve(canvas);\n\t\t\t}\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\treject(e);\n\t\t}\n\t});\n\n}\n","\n/**\n * type - base64\n *\n * @param {HTMLCanvasElement} canvas\n * @param {String} format\n * @param {Number} quality\n * @return {Promise}\n */\nexport function base64(canvas, format='image/jpeg', quality=.75)\n{\n\t// set format\n\tformat = getFormat(format);\n\n\treturn new Promise(function(resolve, reject) {\n\t\ttry {\n\t\t\tconst uri = canvas.toDataURL(format, quality);\n\t\t\tresolve(uri);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treject(e);\n\t\t}\n\t});\n}\n\n\n/**\n * type - blob\n *\n * @param {HTMLCanvasElement} canvas\n * @param {String} format\n * @param {Number} quality\n * @return {Promise}\n */\nexport function blob(canvas, format='image/jpeg', quality=.75)\n{\n\t// set format\n\tformat = getFormat(format);\n\n\treturn new Promise(function(resolve, reject) {\n\t\ttry {\n\t\t\tconst uri = canvas.toDataURL(format, quality);\n\t\t\tconst blob = dataURItoBlob(uri);\n\t\t\tresolve(blob);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treject(e);\n\t\t}\n\t});\n}\n\n\n/**\n * Get format\n *\n * @param {String} str\n * @return {String}\n */\nfunction getFormat(str)\n{\n\tlet format = null;\n\n\tswitch(str)\n\t{\n\t\tcase 'jpg':\n\t\tcase 'jpeg':\n\t\t\tformat = 'image/jpeg';\n\t\t\tbreak;\n\t\tcase 'png':\n\t\t\tformat = 'image/png';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tformat = str;\n\t\t\tbreak;\n\t}\n\n\treturn format\n}\n\n\n/**\n * Data uri to Blob\n * source : https://gist.github.com/davoclavo/4424731\n *\n * @param {String} dataURI\n * @return {Blob}\n */\nfunction dataURItoBlob(dataURI)\n{\n\t// convert base64 to raw binary data held in a string\n\tconst byteString = atob(dataURI.split(',')[1]);\n\n\t// separate out the mime component\n\tconst mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\t// write the bytes of the string to an ArrayBuffer\n\tconst arrayBuffer = new ArrayBuffer(byteString.length);\n\tlet _ia = new Uint8Array(arrayBuffer);\n\tfor (let i = 0; i < byteString.length; i++)\n\t{\n\t\t_ia[i] = byteString.charCodeAt(i);\n\t}\n\n\tconst dataView = new DataView(arrayBuffer);\n\tconst blob = new Blob([dataView], { type: mimeString });\n\n\treturn blob;\n}","import Canvas from './parts/Canvas';\nimport * as events from './parts/events';\nimport * as defaultOptions from './parts/defaultOptions';\nimport resizeImage from './parts/resizeImage';\nimport * as output from './parts/output';\n\n\n/**\n * Resize image\n *\n * @param {Object} options\n */\nfunction ResizeImage(options) {\n\n\t// assign options\n\tthis.options = checkOptions(defaultOptions.base, options);\n\n\t/**\n\t * FUNCTION AREA\n\t */\n\n\t/**\n\t * Check options\n\t *\n\t * @param {Object} original\n\t * @param {Object} target\n\t */\n\tfunction checkOptions(original={}, target={})\n\t{\n\t\tvar result = {};\n\n\t\tObject.keys(original).forEach(function(key) {\n\t\t\tresult[key] = target[key] || original[key];\n\t\t});\n\n\t\tresult.width = Number(result.width);\n\t\tresult.height = Number(result.height);\n\t\tresult.quality = Number(result.quality);\n\t\tresult.reSample = Number(result.reSample);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Image source to canvas\n\t * 이미지 주소로 캔버스로 변환\n\t *\n\t * @param {String} src\n\t * @param {Object} option\n\t * @return {Promise}\n\t */\n\tfunction srcToCanvas(src, option)\n\t{\n\t\tlet canvas = null;\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tevents.loadImage(src).then(\n\t\t\t\t// resolve\n\t\t\t\tfunction(img)\n\t\t\t\t{\n\t\t\t\t\tcanvas = new Canvas(img.width, img.height, option.bgColor);\n\t\t\t\t\tcanvas.ctx.drawImage(img, 0, 0);\n\t\t\t\t\tresolve(canvas);\n\t\t\t\t},\n\t\t\t\t// reject\n\t\t\t\tfunction(error)\n\t\t\t\t{\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Upload to image\n\t * 첨부로 가져온 이미지를 캔버스로 변환\n\t *\n\t * @param {HTMLElement} el\n\t * @param {Object} option\n\t * @return {Promise}\n\t */\n\tfunction formToCanvas(el, option)\n\t{\n\t\tlet canvas = null;\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tfunction error(e)\n\t\t\t{\n\t\t\t\tconsole.log('error event');\n\t\t\t\treject(e);\n\t\t\t}\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = function(e)\n\t\t\t{\n\t\t\t\tconst img = new Image();\n\t\t\t\timg.onload = function()\n\t\t\t\t{\n\t\t\t\t\tcanvas = new Canvas(img.width, img.height, option.bgColor);\n\t\t\t\t\tcanvas.ctx.drawImage(img, 0, 0);\n\t\t\t\t\tresolve(canvas);\n\t\t\t\t};\n\t\t\t\timg.onerror = error;\n\t\t\t\timg.src = e.target.result;\n\t\t\t};\n\t\t\treader.onerror = error;\n\t\t\treader.readAsDataURL(el.files[0]);\n\t\t});\n\t}\n\n\t/**\n\t * Resize canvas\n\t *\n\t * @param {Canvas} canvas\n\t * @param {Object} option\n\t * @return {Promise}\n\t */\n\tfunction resizeCanvas(canvas, option)\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// get size\n\t\t\tlet size = getSize(canvas.el.width, canvas.el.height, option.width, option.height);\n\n\t\t\t// resize image\n\t\t\tresizeImage({\n\t\t\t\tcanvas: canvas,\n\t\t\t\treSample: option.reSample,\n\t\t\t\twidth: size.width,\n\t\t\t\theight: size.height,\n\t\t\t\tcx: 0,\n\t\t\t\tcy: 0,\n\t\t\t\tcw: canvas.el.width,\n\t\t\t\tch: canvas.el.height,\n\t\t\t\tdx: 0,\n\t\t\t\tdy: 0,\n\t\t\t\tdw: size.width,\n\t\t\t\tdh: size.height,\n\t\t\t\tbgColor: option.bgColor,\n\t\t\t})\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject);\n\t\t});\n\t}\n\n\t/**\n\t * Convert to image\n\t * 이미지 데이터로 변환\n\t *\n\t * @param {Canvas} canvas\n\t * @param {Object} option\n\t * @return {*}\n\t */\n\tfunction convertToImage(canvas, option)\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\n\t\t\tswitch (option.outputType)\n\t\t\t{\n\t\t\t\tcase 'base64':\n\t\t\t\t\toutput.base64(canvas.el, option.format, option.quality)\n\t\t\t\t\t\t.then(resolve)\n\t\t\t\t\t\t.catch(reject);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'blob':\n\t\t\t\t\toutput.blob(canvas.el, option.format, option.quality)\n\t\t\t\t\t\t.then(resolve)\n\t\t\t\t\t\t.catch(reject);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'canvas':\n\t\t\t\tdefault:\n\t\t\t\t\tresolve(canvas.el);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * METHOD AREA\n\t */\n\n\t/**\n\t * Play convert\n\t * 이미지 변환 실행\n\t * 이미지 주소로 캔버스로 변환 -> 캔버스를 리사이즈 -> 이미지로 컨버트\n\t *\n\t * @param {String|HTMLElement} src\n\t * @return {Promise}\n\t */\n\tthis.play = function(src)\n\t{\n\t\t// fire ready callback function\n\t\tif (this.options.callback_ready)\n\t\t{\n\t\t\tthis.options.callback_ready();\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (typeof src === 'string')\n\t\t\t{\n\t\t\t\t// image url\n\t\t\t\tsrcToCanvas(src, this.options)\n\t\t\t\t\t.then((canvas) => resizeCanvas(canvas, this.options))\n\t\t\t\t\t.then((canvas) => convertToImage(canvas, this.options))\n\t\t\t\t\t.then((result) => resolve(result))\n\t\t\t\t\t.catch((error) => reject(error));\n\t\t\t}\n\t\t\telse if (typeof src === 'object')\n\t\t\t{\n\t\t\t\t// input[type=file] form\n\t\t\t\tformToCanvas(src, this.options)\n\t\t\t\t\t.then((canvas) => resizeCanvas(canvas, this.options))\n\t\t\t\t\t.then((canvas) => convertToImage(canvas, this.options))\n\t\t\t\t\t.then((result) => resolve(result))\n\t\t\t\t\t.catch((error) => reject(error));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treject(new Error('Not found source'));\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * Update options\n\t *\n\t * @param {Object} options\n\t */\n\tthis.updateOptions = function(options)\n\t{\n\t\tthis.options = checkOptions(this.options, options);\n\t}\n}\n\n\n/**\n * Get image size\n *\n * @param {Number} width original width\n * @param {Number} height original height\n * @param {Number} targetWidth target width\n * @param {Number} targetHeight target height\n * @return {Object}\n */\nfunction getSize(width, height, targetWidth, targetHeight)\n{\n\tlet w = width;\n\tlet h = height;\n\n\tif (targetWidth && targetHeight)\n\t{\n\t\tif (targetWidth > targetHeight)\n\t\t{\n\t\t\ttargetHeight = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttargetWidth = null;\n\t\t}\n\t}\n\n\tif (targetWidth)\n\t{\n\t\tw = targetWidth;\n\t\th = height * (targetWidth / width);\n\t}\n\telse if (targetHeight)\n\t{\n\t\tw = width * (targetHeight / height);\n\t\th = targetHeight;\n\t}\n\n\treturn {\n\t\twidth: parseInt(w),\n\t\theight: parseInt(h)\n\t};\n}\n\n\nexport default ResizeImage;\n"],"names":["Canvas","width","height","bgColor","el","document","createElement","ctx","getContext","fillStyle","fillRect","loadImage","src","Promise","resolve","reject","image","Image","onload","e","onerror","setAttribute","Error","base","log","defaultOptions","resize","options","count","parentCanvas","func","pow","Math","canvasForResize","drawImage","resizeImage","Object","assign","reSample","min","max","reSamplingCount","canvas","cx","cy","cw","ch","dx","dy","dw","dh","then","base64","format","quality","getFormat","uri","toDataURL","blob","dataURItoBlob","str","dataURI","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","length","_ia","Uint8Array","i","charCodeAt","dataView","DataView","Blob","type","ResizeImage","checkOptions","original","target","result","keys","forEach","key","Number","srcToCanvas","option","img","error","formToCanvas","reader","FileReader","readAsDataURL","files","resizeCanvas","size","getSize","catch","convertToImage","outputType","play","callback_ready","updateOptions","targetWidth","targetHeight","w","h","parseInt"],"mappings":"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"}